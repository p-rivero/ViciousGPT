<Window x:Class="ViciousGPT.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ViciousGPT"
        xmlns:properties="clr-namespace:ViciousGPT.Properties"
        mc:Ignorable="d"
        Title="ViciousGPT" Height="500" Width="750" MinHeight="450" MinWidth="500">
    <ScrollViewer>
        <StackPanel Margin="10,10,10,10">
            <StackPanel Orientation="Horizontal">
                <Label Content="1. Name your character:" FontWeight="Bold"/>
                <TextBox TextWrapping="Wrap" Width="120" Text="{Binding Source={x:Static properties:Settings.Default}, Path=CharacterName, Mode=TwoWay}" VerticalAlignment="Center" Margin="10,0,0,0"/>
            </StackPanel>
            <TextBlock Margin="10,0,0,0">
        When talking, you can use this name to refer to your character.
            </TextBlock>
            <Label Content="2. Add your credentials:" FontWeight="Bold" Margin="0,20,0,0"/>
            <StackPanel Orientation="Horizontal">
                <Label Content="Local Google Cloud credentials:" Margin="5,0,0,0"/>
                <Label x:Name="googleCloudFoundLabel" Content="Found" Margin="5,0,0,0" FontWeight="Bold" Foreground="#FF1A9601"/>
                <Label x:Name="googleCloudNotFoundLabel" Content="NOT FOUND (See README.md)" Margin="5,0,0,0" FontWeight="Bold" Foreground="#FFF30000"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="OpenAI key:" Margin="5,0,0,0"/>
                <PasswordBox x:Name="openAiKeyBox" Width="150" VerticalAlignment="Center" Margin="10,0,0,0"/>
            </StackPanel>
            <TextBlock TextWrapping="Wrap" Text="Make sure to keep those credentials secret. You shouldn't enter them on an app you don't trust (not even this one!) without checking its source code first." Margin="10,0,0,0"/>
            <Label Content="3. (Optional) Select the act(s) you are playing:" FontWeight="Bold" Margin="0,20,0,0"/>
            <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                <CheckBox Content="Act 1" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=SelectedAct1, Mode=TwoWay}" Margin="10,0,0,0"/>
                <CheckBox Content="Act 2" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=SelectedAct2, Mode=TwoWay}" Margin="20,0,0,0"/>
                <CheckBox Content="Act 3" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=SelectedAct3, Mode=TwoWay}" Margin="20,0,0,0"/>
            </StackPanel>
            <TextBlock TextWrapping="Wrap" Text="This reduces the amount of data sent to OpenAI (and therefore cost)." Margin="10,0,0,0"/>
            <Label Content="4. Start using the app" FontWeight="Bold" Margin="0,20,0,0"/>
            <TextBlock TextWrapping="Wrap" Margin="10,0,0,0"><Run Text="Keep this program running while you play. The window can be minimized."/><LineBreak/><Run Text="Whenever you want your character to come up with a Vicious Mockery line, press Ctrl+Enter and talk to them, explaining the situation you're in and which enemy you are attacking. Then, press Ctrl+Enter again to confirm, or Ctrl+Alt+Enter to cancel."/><LineBreak/><Run Text="Wait a few seconds for the response to be generated."/><LineBreak/><Run Text="For controller users: Press both analog sticks to talk/confirm, and press both triggers to cancel."/></TextBlock>
            <Expander Header="Advanced settings" Margin="0,10,0,0">
                <StackPanel Margin="10,10,0,0">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Content="Output log file" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=OutputLogFile, Mode=TwoWay}" Margin="10,0,0,0" VerticalAlignment="Center"/>
                        <CheckBox Content="Output intermediary files" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=OutputIntermediaryResults, Mode=TwoWay}" Margin="20,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"  Margin="0,20,0,0">
                        <Label Content="Profanity:" Margin="5,0,0,0"/>
                        <ComboBox Width="120" SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=ProfanityFilter, Mode=TwoWay}" SelectedValuePath="Tag">
                            <ComboBoxItem Content="No profanity" Tag="0"/>
                            <ComboBoxItem Content="Allowed" Tag="1"/>
                            <ComboBoxItem Content="Encouraged" Tag="2"/>
                            <ComboBoxItem Content="Mandatory" Tag="3"/>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                        <Label Content="User input language (ISO-639-1):" Margin="5,0,0,0"/>
                        <TextBox Width="120" Text="{Binding Source={x:Static properties:Settings.Default}, Path=UserInputLanguage, Mode=TwoWay}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                        <Label Content="Controller number:" Margin="20,0,0,0"/>
                        <RadioButton x:Name="controllerRadio1" Content="1" VerticalAlignment="Center" Margin="5,0,0,0" Checked="controllerRadio_Checked"/>
                        <RadioButton x:Name="controllerRadio2" Content="2" VerticalAlignment="Center" Margin="5,0,0,0" Checked="controllerRadio_Checked"/>
                        <RadioButton x:Name="controllerRadio3" Content="3" VerticalAlignment="Center" Margin="5,0,0,0" Checked="controllerRadio_Checked"/>
                        <RadioButton x:Name="controllerRadio4" Content="4" VerticalAlignment="Center" Margin="5,0,0,0" Checked="controllerRadio_Checked"/>
                    </StackPanel>
                    <DockPanel Margin="0,10,0,0">
                        <Label Content="Run command" Margin="5,0,0,0"/>
                        <TextBox Width="30" Text="{Binding Source={x:Static properties:Settings.Default}, Path=PreRequestCommandDelay, Mode=TwoWay}" VerticalAlignment="Center" Margin="2,0,2,0"/>
                        <Label Content="seconds after user starts speaking:"/>
                        <TextBox Text="{Binding Source={x:Static properties:Settings.Default}, Path=PreRequestCommand, Mode=TwoWay}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    </DockPanel>
                    <DockPanel Margin="0,5,0,0">
                        <Label Content="Run command" Margin="5,0,0,0"/>
                        <TextBox Width="30" Text="{Binding Source={x:Static properties:Settings.Default}, Path=PostResponseCommandDelay, Mode=TwoWay}" VerticalAlignment="Center" Margin="2,0,2,0"/>
                        <Label Content="seconds after response is played:"/>
                        <TextBox Text="{Binding Source={x:Static properties:Settings.Default}, Path=PostResponseCommand, Mode=TwoWay}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    </DockPanel>
                    <DockPanel Margin="0,5,0,0">
                        <Label Content="Run command" Margin="5,0,0,0"/>
                        <TextBox Width="30" Text="{Binding Source={x:Static properties:Settings.Default}, Path=OnCancelCommandDelay, Mode=TwoWay}" VerticalAlignment="Center" Margin="2,0,2,0"/>
                        <Label Content="seconds after user cancels recording:"/>
                        <TextBox Text="{Binding Source={x:Static properties:Settings.Default}, Path=OnCancelCommand, Mode=TwoWay}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    </DockPanel>
                </StackPanel>
            </Expander>
        </StackPanel>
    </ScrollViewer>
</Window>
